{"version":3,"file":"static/js/830.1f1b2dfc.chunk.js","mappings":"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","sources":["../../src/enums/payType.js","../../src/enums/index.js","../../src/defaultCurrencies.js","../../src/FormatPayDetails.js","../../src/PayDetails.js","../../src/locale/en-US.js","../../src/locale/zh-CN.js"],"sourcesContent":["import React from 'react';\nimport { FormattedMessage } from '@kne/react-intl';\n\nconst payType = [\n  { description: <FormattedMessage id=\"hourlyWage\" />, value: 'hourly' },\n  {\n    description: <FormattedMessage id=\"monthlyPay\" />,\n    value: 'monthly'\n  },\n  { description: <FormattedMessage id=\"annualSalary\" />, value: 'yearly' },\n  {\n    description: <FormattedMessage id=\"annualSalaryBonus\" />,\n    value: 'yearlyBonus'\n  }\n];\n\nexport default payType;\n","import payType from './payType';\n\nconst enums = { payType };\nexport { payType };\nexport default enums;\n","const defaultCurrencies = ['AUD', 'HKD', 'IDR', 'MYR', 'NZD', 'PHP', 'SGD', 'THB', 'USD', 'BDT', 'CNY', 'EUR', 'GBP', 'INR', 'JPY', 'VND'];\n\nexport default defaultCurrencies;\n","import React from 'react';\nimport get from 'lodash/get';\nimport { payType } from './enums';\n\nconst FormatPayDetails = ({ value }) => {\n  return (\n    <>\n      {get(\n        payType.find(item => item.value === get(value, 'payType', 'monthly')),\n        'description',\n        ''\n      )}\n      &nbsp;\n      {`${(get(value, 'minimumAmount') || 0).toLocaleString(navigator.language, {\n        style: 'currency',\n        currency: get(value, 'currency', 'USD'),\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      })}~${(get(value, 'maximumAmount') || 0).toLocaleString(navigator.language, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n      })}${get(value, 'description') ? `(${get(value, 'description')})` : ''}`}\n    </>\n  );\n};\n\nexport default FormatPayDetails;\n","import React from 'react';\nimport { Flex, Radio, Select, InputNumber, Input, Space, Alert } from 'antd';\nimport { payType } from './enums';\nimport defaultCurrencies from './defaultCurrencies';\nimport useControlValue from '@kne/use-control-value';\nimport { hooks } from '@kne/react-form-antd';\nimport useSimulationBlur from '@kne/use-simulation-blur';\nimport get from 'lodash/get';\nimport style from './style.module.scss';\nimport classnames from 'classnames';\nimport FormatPayDetails from './FormatPayDetails';\nimport zhCn from './locale/zh-CN';\nimport enUS from './locale/en-US';\nimport { createWithIntlProvider, useIntl, localeLoader } from '@kne/react-intl';\n\nconst { useDecorator } = hooks;\n\nlocaleLoader('en-US', enUS, 'pay-details');\n\nconst PayDetailsField = createWithIntlProvider(\n  'zh-CN',\n  zhCn,\n  'pay-details'\n)(({ currencies = defaultCurrencies, onBlur, ...props }) => {\n  const [value, onChange] = useControlValue(props);\n  const { formatMessage } = useIntl();\n  const ref = useSimulationBlur(onBlur);\n  return (\n    <Flex vertical gap={10} ref={ref}>\n      <Radio.Group\n        value={get(value, 'payType') || 'monthly'}\n        onChange={e => {\n          onChange(value => {\n            return Object.assign({}, value, {\n              payType: e.target.value\n            });\n          });\n        }}\n        options={payType.map(({ description, value }) => {\n          return { value, label: description };\n        })}\n      />\n      <Flex gap={8}>\n        <Select\n          value={get(value, 'currency') || 'USD'}\n          onChange={currency => {\n            onChange(value => {\n              return Object.assign({}, value, {\n                currency\n              });\n            });\n          }}\n          className={style['currencies-select']}\n          placeholder={formatMessage({ id: 'pleaseSelectCurrency' })}\n          options={currencies.map(code => ({ value: code, label: code }))}\n        />\n        <Flex flex={1}>\n          <Space.Compact>\n            <InputNumber\n              value={get(value, 'minimumAmount')}\n              onChange={minimumAmount => {\n                onChange(value => {\n                  return Object.assign({}, value, {\n                    minimumAmount\n                  });\n                });\n              }}\n              className={'react-form__field-component'}\n              placeholder={formatMessage({ id: 'minimumValue' })}\n              min={0}\n            />\n            <Input\n              style={{\n                width: 30,\n                borderLeft: 0,\n                borderRight: 0,\n                pointerEvents: 'none'\n              }}\n              placeholder=\"~\"\n              disabled\n            />\n            <InputNumber\n              value={get(value, 'maximumAmount')}\n              onChange={maximumAmount => {\n                onChange(value => {\n                  return Object.assign({}, value, {\n                    maximumAmount\n                  });\n                });\n              }}\n              className={'react-form__field-component'}\n              placeholder={formatMessage({ id: 'maximumValue' })}\n              min={0}\n            />\n          </Space.Compact>\n        </Flex>\n      </Flex>\n      <div>\n        <div className={classnames('react-form__field-label', style['field-label'])}>{formatMessage({ id: 'salaryDescription' })}</div>\n        <Input\n          value={get(value, 'description')}\n          onChange={e => {\n            onChange(value => {\n              return Object.assign({}, value, {\n                description: e.target.value\n              });\n            });\n          }}\n          placeholder={formatMessage({ id: 'salaryDescriptionPlaceholder' })}\n          maxLength={100}\n        />\n      </div>\n      <Alert className={style['preview']} message={<FormatPayDetails value={value} />} />\n    </Flex>\n  );\n});\n\nconst PayDetails = props => {\n  const render = useDecorator({\n    ...props,\n    req: props?.rule?.indexOf('REQ') > -1\n  });\n  return render(PayDetailsField);\n};\n\nPayDetails.Field = PayDetailsField;\n\nexport default PayDetails;\n","const locale = {\n  pleaseSelectCurrency: 'Please select currency',\n  minimumValue: 'Minimum value',\n  maximumValue: 'Maximum value',\n  salaryDescription: 'Additional salary description',\n  salaryDescriptionPlaceholder: 'Please enter additional salary description to show candidates',\n  hourlyWage: 'Hourly wage',\n  monthlyPay: 'Monthly pay',\n  annualSalary: 'Annual salary',\n  annualSalaryBonus: 'Annual salary with bonus'\n};\n\nexport default locale;\n","const locale = {\n  pleaseSelectCurrency: '请选择币种',\n  minimumValue: '最小值',\n  maximumValue: '最大值',\n  salaryDescription: '额外薪资说明',\n  salaryDescriptionPlaceholder: '请输入对候选人展示的额外薪资说明',\n  hourlyWage: '时薪',\n  monthlyPay: '月薪',\n  annualSalary: '年薪',\n  annualSalaryBonus: '年薪加奖金'\n};\n\nexport default locale;\n"],"names":["payType","description","React","FormattedMessage","id","value","enums","defaultCurrencies","FormatPayDetails","_ref2","get","find","item","concat","toLocaleString","navigator","language","style","currency","minimumFractionDigits","maximumFractionDigits","useDecorator","hooks","localeLoader","pleaseSelectCurrency","minimumValue","maximumValue","salaryDescription","salaryDescriptionPlaceholder","hourlyWage","monthlyPay","annualSalary","annualSalaryBonus","PayDetailsField","createWithIntlProvider","_ref","currencies","onBlur","props","_objectWithoutPropertiesLoose","_excluded","onChange","useControlValue","formatMessage","useIntl","ref","useSimulationBlur","Flex","vertical","gap","Radio","Group","e","Object","assign","target","options","map","_ref3","label","Select","className","placeholder","code","flex","Space","Compact","InputNumber","minimumAmount","min","Input","width","borderLeft","borderRight","pointerEvents","disabled","maximumAmount","classnames","maxLength","Alert","message","PayDetails","_props$rule","_extends","req","rule","indexOf","render","Field"],"sourceRoot":""}